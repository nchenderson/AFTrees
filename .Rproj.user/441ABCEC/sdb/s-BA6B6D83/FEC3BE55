{
    "collab_server" : "",
    "contents" : "\nsolvdT <- read.csv(\"~/personalized/Data/solvdT.csv\")\nsource(file=\"~/personalized/aft_code/HistogramEstimate.R\")\n\nsolvd_new <- model.frame(ttodthorchfhosp ~ deathorchfhosp + trtment + lvef + gend + age + himi + diabet + smoke + nyha + depedema, data=solvdT)\n## maybe add sodium\ntrt.ind <- rep(0, nrow(solvd_new))\ntrt.ind[solvd_new$trtment==\"Enalapril\"] <- 1\nsolvd_new$Trt <- trt.ind\n\nsolvd0 <- solvd1 <- solvd_new\nsolvd0$Trt <- 0\nsolvd1$Trt <- 1\n\nX.train <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi - 1, data=solvd_new)\nyy.train <- as.numeric(solvd_new$ttodthorchfhosp)\ndelta.train <- solvd_new$deathorchfhosp\nTrt.train <- solvd_new$Trt\n\naftFit.train <- IndivAFT(X.train,yy.train,status=delta.train,Trt=Trt.train, ndpost=400,nskip=400,printevery=100)\nrisk_score1 <- exp(-colMeans(aftFit.train$Theta))\nsummary(risk_score1)\n\nX.train <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi + diabet + smoke + nyha + depedema - 1, data=solvd_new)\naftFit.train <- IndivAFT(X.train,yy.train,status=delta.train,Trt=Trt.train, ndpost=400,nskip=400,printevery=100)\nrisk_score2 <- exp(-colMeans(aftFit.train$Theta))\nsummary(risk_score2)\nsummary(risk_score1)\nplot(risk_score1, risk_score2)\nabline(0,1)\n\n\n\n## gender - 1 = men\n## male, older, history of myocardial infarction, and lower ejection fraction seem to benefit more from treatment.\n\n\nr.cut <- c(.55, .7)\n\nnpatients <- nrow(solvd_new)\nnfolds <- 10\ntrue.effect1 <- true.effect2 <- true.effect3 <- pred.effect <- pred.effect2 <- overall <- test.ss <- rep(0, nfolds)\nnmat <- matrix(0, nrow=nfolds, ncol=3)\ncount <- 1\nwhile(count <= nfolds) {\n  ind <- sample(1:npatients, size=1564)\n  ctest <- solvd_new[-ind,]\n  ctrain <- solvd_new[ind,]\n  ctest0 <- solvd0[-ind,]\n  ctest1 <- solvd1[-ind,]\n  \n  #X.train <- model.matrix(T_PRIMARY ~ AGE + FEMALE + BMI + STATIN + SUB_CKD + SBP + DBP + RACE_BLACK - 1, data=ctrain)\n  #X.test <- model.matrix(T_PRIMARY ~ AGE + FEMALE + BMI + STATIN + SUB_CKD + SBP + DBP + RACE_BLACK - 1, data=ctest)\n  #X.train <- model.matrix(T_PRIMARY ~ RISK10YRS - 1, data=ctrain)\n  #X.test <- model.matrix(T_PRIMARY ~ RISK10YRS - 1, data=ctest)\n  \n  #fit.train <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt*(lvef + gend + age + himi), data=ctrain)\n  #fit.test <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt*(lvef + gend + age + himi), data=ctest)\n  delta.train <- ctrain$deathorchfhosp\n  yy.train <- as.numeric(ctrain$ttodthorchfhosp)\n  Trt.train <- ctrain$Trt\n  \n  #X.train <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi + diabet + smoke + nyha + depedema - 1, data=ctrain)\n  #X.test <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi + diabet + smoke + nyha + depedema - 1, data=ctest)\n  X.train <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi - 1, data=ctrain)\n  X.test <- model.matrix(ttodthorchfhosp ~ lvef + gend + age + himi - 1, data=ctest)\n  \n  aftFit.train <- IndivAFT(X.train,yy.train,status=delta.train,Trt=Trt.train,x.test=X.test, ndpost=500,nskip=500,printevery=100,\n                           sigquant=.5)\n  risk_score <- exp(-colMeans(aftFit.train$Theta.test))\n\n  fit.train <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt*(lvef + gend + age + himi), data=ctrain)\n  \n  f1 <- predict(fit.train, newdata=ctest1)\n  f0 <- predict(fit.train, newdata=ctest0)\n  risk_score2 <- exp(f1 - f0)\n  \n  plot(risk_score2, risk_score)\n  \n  #delta.train <- ctrain$deathorchfhosp\n  #yy.train <- as.numeric(ctrain$ttodthorchfhosp)\n  #Trt.train <- ctrain$Trt\n  \n  ind_strata1 <- risk_score <= r.cut[1]\n  ind_strata2 <- risk_score <= r.cut[2] & risk_score > r.cut[1]\n  ind_strata3 <- risk_score > r.cut[2]\n  ctest_strata1 <- ctest[ind_strata1,]\n  ctest_strata2 <- ctest[ind_strata2,]\n  ctest_strata3 <- ctest[ind_strata3,]\n  \n  n1 <- nrow(ctest_strata1)\n  n2 <- nrow(ctest_strata2)\n  n3 <- nrow(ctest_strata3)\n  delt1 <- sum(ctest_strata1$deathorchfhosp)\n  delt2 <- sum(ctest_strata2$deathorchfhosp)\n  delt3 <- sum(ctest_strata3$deathorchfhosp)\n  \n  print(c(n1,n2,n3))\n  nmin <- min(c(n1,n2,n3))\n  \n  \n  if(nmin > 10) {\n    #b1 <- survreg(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata1)\n    #b2 <- survreg(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata2)\n    #b3 <- survreg(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata3)\n    \n    #true.effect1[count] <- exp(b1$coefficients[2])\n    #true.effect2[count] <- exp(b2$coefficients[2])\n    #true.effect3[count] <- exp(b3$coefficients[2])\n    \n    b1 <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata1)\n    b2 <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata2)\n    b3 <- coxph(Surv(ttodthorchfhosp, deathorchfhosp) ~ Trt, data=ctest_strata3)\n    \n    true.effect1[count] <- exp(b1$coefficients[1])\n    true.effect2[count] <- exp(b2$coefficients[1])\n    true.effect3[count] <- exp(b3$coefficients[1])\n    \n    nmat[count,] <- c(n1, n2, n3)\n    count <- count + 1\n    #tmp <- rmst2(sub_solvd$time, sub_solvd$status, arm=sub_arm, tau=2*365)\n    #mu.tmp <- arm1[1] - arm0[1]\n    \n  }\n  print(count)\n}\n\nsummary(true.effect1)\nsummary(true.effect2)\nsummary(true.effect3)\n\nt1 <- c(mean(true.effect1) - qnorm(.95)*sd(true.effect1), mean(true.effect1), mean(true.effect1) + qnorm(.95)*sd(true.effect1))\nt2 <- c(mean(true.effect2) - qnorm(.95)*sd(true.effect2), mean(true.effect2), mean(true.effect2) + qnorm(.95)*sd(true.effect2))\nt3 <- c(mean(true.effect3) - qnorm(.95)*sd(true.effect3), mean(true.effect3), mean(true.effect3) + qnorm(.95)*sd(true.effect3))\n\nsurvreg(Surv(futime, fustat) ~ ecog.ps + rx, ovarian,\n        dist=\"exponential\")\n\n\n\n\n\n",
    "created" : 1515094752055.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "3049770790",
    "id" : "FEC3BE55",
    "lastKnownWriteTime" : 3760349993931976298,
    "last_content_update" : 1521495377275,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled36"
    },
    "relative_order" : 40,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}